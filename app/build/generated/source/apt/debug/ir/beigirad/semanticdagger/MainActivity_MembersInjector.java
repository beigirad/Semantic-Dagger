// Generated by Dagger (https://google.github.io/dagger).
package ir.beigirad.semanticdagger;

import dagger.MembersInjector;
import ir.beigirad.semanticdagger.model.CoffeeMaker;
import javax.inject.Provider;

public final class MainActivity_MembersInjector implements MembersInjector<MainActivity> {
  private final Provider<CoffeeMaker> mCoffeeMakerProvider;

  public MainActivity_MembersInjector(Provider<CoffeeMaker> mCoffeeMakerProvider) {
    this.mCoffeeMakerProvider = mCoffeeMakerProvider;
  }

  public static MembersInjector<MainActivity> create(Provider<CoffeeMaker> mCoffeeMakerProvider) {
    return new MainActivity_MembersInjector(mCoffeeMakerProvider);
  }

  @Override
  public void injectMembers(MainActivity instance) {
    injectMCoffeeMaker(instance, mCoffeeMakerProvider.get());
  }

  public static void injectMCoffeeMaker(MainActivity instance, CoffeeMaker mCoffeeMaker) {
    instance.mCoffeeMaker = mCoffeeMaker;
  }
}
